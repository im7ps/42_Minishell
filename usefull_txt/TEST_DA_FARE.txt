subito dopo l'input dell utente:
-controllare che non siano presenti caratteri non ammessi V
-controllare che le quote siano state inserite in modo corretto V
-controllare che non finisca con una redirection (va gestito l inizio di ogni redirection) V
-controllare che non ci siano due redirection di fila
-REDIRECTION:
-dopo una redirection ci deve essere qualcosa altrimenti DIALOG_ERR, vale per tutti i comandi

subito dopo la creazione della lista:
-controllare che il primo argomento di ogni stringa comando sia il nome di un comando o una fra le redirection ammesse (da testare quali sono ammesse)

subito prima del comando echo (altre built-in e non built-in da testare)
-considerare virgolette doppie e testo senza spazi dopo di esse come unico argomento

>_TEST
>								SYNTAX_ERR
> test 							Crea un file di nome test con nulla dentro
>test 							Crea un file di nome test con nulla dentro
> FILE_NAME test 				Crea un file di nome 	FILE_NAME con nulla dentro
> FILE_NAME CMD_NAME			*Crea un file di nome file.txt e manda l output del CMD_NAME su FILE_NAME
> FILE_NAME CMD_NAME CMD_ARGS	*Crea un file di nome file.txt e manda l output del CMD_NAME eseguito con CMD_ARGS su FILE_NAME

*Se le cartelle contenevano dati al loro interno vengono sovrascritti, con uno spazio di distanza fra una parola e l altra

>>_TEST
>>								SYNTAX_ERR
>> test 						Crea un file di nome test con nulla dentro
>>test 							Crea un file di nome test con nulla dentro
>> FILE_NAME test 				Crea un file di nome 	FILE_NAME con nulla dentro
>> FILE_NAME CMD_NAME			*Crea un file di nome file.txt e manda l output del CMD_NAME su FILE_NAME
>> FILE_NAME CMD_NAME CMD_ARGS	*Crea un file di nome file.txt e manda l output del CMD_NAME eseguito con CMD_ARGS su FILE_NAME

*Se le cartelle contenevano dati al loro interno vengono conservati, l' output viene visualizzato su una nuova linea, con uno spazio di distanza fra una parola e l altra


<_TEST
<								SYNTAX_ERR
< test 							Se esiste un file o una directory di nome test mostra un nuovo prompt, altrimenti NO_FILDIR_ERR
<test 							Se esiste un file o una directory di nome test mostra un nuovo prompt, altrimenti NO_FILDIR_ERR
< FILE_NAME test				Se esiste un file o una directory di nome FILE_NAME ma non trova un comando mostra un nuovo prompt, altrimenti NO_FILDIR_ERR
< FILE_NAME CMD_NAME			Se esiste un file o una directory di nome FILE_NAME manda sullo STD_OUT l output del CMD_NAME, altrimenti NO_FILDIR_ERR
< FILE_NAME CMD_NAME CMD_ARGS 	Se esiste un file o una directory di nome FILE_NAME manda sullo STD_OUT l output del CMD_NAME eseguito con CMD_ARGS, altrimenti NO_FILDIR_ERR

<<_TEST
<<								SYNTAX_ERR
<< CMD_NAME						QUOTE_ERR
<<CMD_NAME						QUOTE_ERR
<< test							QUOTE_ERR
<<test							QUOTE_ERR
<< CMD_NAME test				QUOTE_ERR
<< echo echo test				QUOTE_ERR

ECHO_TEST
echo							Stampa andando a capo
echo test						Stampa test
echo echo						Stampa echo
echo echo test					Stampa echo test
echo "echo"test					*Stampa echotest
echo "echo" test				*Stampa echo test
echo "echo"      test			*Stampa echo test
echo "echo"      test		$	*Stampa echo test $
echo "ech""o"					*Stampa echo
echo "ech"o"					*QUOTE_ERR
echo "    "test					*Stampa     test
echo "    "test"   ""echo"		*Stampa    test   echo

*Same with ', e viene applicato a tutti un \n finale
