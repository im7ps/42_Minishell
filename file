else if (command_red == 3)
			{
				int			buffer_size;
				int			fd;
				char		*file_content;
				struct 		stat st;


				buffer_size = -1;
				//file_content = "0001";
			
				while (!ft_strncmp(file_content, "EOF", 3))
				{
					write(1, "\n", 1);
					rl_on_new_line(); 
					rl_replace_line("heredoc>", 0);
					rl_redisplay();

					fd = open("heredoc_tmp.txt", O_RDWR | O_CREAT, 0644);
					if (!fd)
					{
						ft_printf("Error opening the tmp file\n");
						return (1);
					}
					dup2(fd, STDIN_FILENO);
					
					if (fstat(fd, &st) == -1)
					{
						ft_printf("Error using fstat\n");
					}

					if (st.st_size > buffer_size)
					{
						if (file_content && ft_strncmp(file_content, "0001", 3))
							free(file_content);
						file_content = (char *) malloc (sizeof(char) * (st.st_size + 1));
					}
					else
					{
						int i;

						i = 0;
						while (file_content[i])
						{
							file_content[i] = '\0';
							i++;
						}
					}
					buffer_size = st.st_size;
					read(fd, file_content, buffer_size);
					write(fd, file_content, buffer_size);

					//free(file_content);
					//file_content = NULL;
					close(fd);
				}
				//i++;
			}